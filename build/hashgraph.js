// Generated by CoffeeScript 1.10.0
(function() {
  var Visualizer, draw, height, makeMachine;

  Visualizer = {
    machines: []
  };

  Visualizer.addMachine = function(node) {
    return Visualizer.machines.push(node);
  };

  makeMachine = function(name) {
    var events, gossip, knownMachines, machine, receiveGossip;
    knownMachines = [];
    events = [];
    gossip = function() {
      return console.log(node.name, ' is gossipping to ');
    };
    receiveGossip = function() {
      return console.log(node.name, ' received gossip ');
    };
    machine = {
      name: name,
      gossip: gossip,
      receiveGossip: receiveGossip,
      events: events
    };
    knownMachines.push(machine);
    events.push({
      node: machine,
      hash: Math.random()
    });
    return machine;
  };

  height = 300;

  draw = function() {
    var circle, event, eventIndex, i, len, machine, machineIndex, ref, results, startHeight, timelineX;
    Visualizer.clear();
    timelineX = 0;
    ref = Visualizer.machines;
    results = [];
    for (machineIndex = i = 0, len = ref.length; i < len; machineIndex = ++i) {
      machine = ref[machineIndex];
      timelineX += 20;
      startHeight = height - 20;
      Visualizer.path("M " + timelineX + "," + startHeight + " l 0," + (-startHeight));
      results.push((function() {
        var j, len1, ref1, results1;
        ref1 = machine.events;
        results1 = [];
        for (eventIndex = j = 0, len1 = ref1.length; j < len1; eventIndex = ++j) {
          event = ref1[eventIndex];
          circle = Visualizer.circle(timelineX, startHeight, 10);
          circle.attr("fill", "#EEE");
          results1.push(circle.attr("stroke", "#999"));
        }
        return results1;
      })());
    }
    return results;
  };

  $(function() {
    Visualizer.__proto__ = Raphael(document.getElementById('hashgraph_visualizer'));
    $('button#add-node').click(function() {
      Visualizer.addMachine(makeMachine('hello'));
      return draw();
    });
    Visualizer.addMachine(makeMachine('hello'));
    return draw();
  });

}).call(this);
